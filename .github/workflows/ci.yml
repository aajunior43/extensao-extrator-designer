name: CI/CD Pipeline

on:
  push:
    branches: [ master, main ]
  pull_request:
    branches: [ master, main ]
  release:
    types: [ published ]

jobs:
  lint-and-validate:
    runs-on: ubuntu-latest
    name: Lint and Validate
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Validate manifest.json
      run: |
        echo "Validating manifest.json..."
        node -e "JSON.parse(require('fs').readFileSync('manifest.json', 'utf8')); console.log('✅ manifest.json is valid');"
        
    - name: Check file structure
      run: |
        echo "Checking required files..."
        test -f manifest.json && echo "✅ manifest.json exists"
        test -f popup.html && echo "✅ popup.html exists"
        test -f popup.js && echo "✅ popup.js exists"
        test -f content_script.js && echo "✅ content_script.js exists"
        test -f options.html && echo "✅ options.html exists"
        test -f options.js && echo "✅ options.js exists"
        test -f README.md && echo "✅ README.md exists"
        test -f LICENSE && echo "✅ LICENSE exists"
        
    - name: Validate HTML files
      run: |
        echo "Validating HTML syntax..."
        # Basic HTML validation
        grep -q "<!DOCTYPE html>" popup.html && echo "✅ popup.html has DOCTYPE"
        grep -q "<!DOCTYPE html>" options.html && echo "✅ options.html has DOCTYPE"
        
    - name: Check JavaScript syntax
      run: |
        echo "Checking JavaScript syntax..."
        node -c popup.js && echo "✅ popup.js syntax is valid"
        node -c options.js && echo "✅ options.js syntax is valid"
        node -c content_script.js && echo "✅ content_script.js syntax is valid"
        
    - name: Security check
      run: |
        echo "Running security checks..."
        # Check for potential security issues
        ! grep -r "eval(" . --include="*.js" && echo "✅ No eval() usage found"
        ! grep -r "innerHTML.*+" . --include="*.js" && echo "✅ No unsafe innerHTML concatenation"
        
  build-extension:
    runs-on: ubuntu-latest
    needs: lint-and-validate
    name: Build Extension Package
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Create extension package
      run: |
        echo "Creating extension package..."
        mkdir -p dist
        
        # Copy extension files
        cp manifest.json dist/
        cp popup.html dist/
        cp popup.js dist/
        cp options.html dist/
        cp options.js dist/
        cp content_script.js dist/
        cp LICENSE dist/
        cp README.md dist/
        
        # Create zip package
        cd dist
        zip -r ../extensao-extrator-designer.zip .
        cd ..
        
        echo "✅ Extension package created: extensao-extrator-designer.zip"
        ls -la extensao-extrator-designer.zip
        
    - name: Upload build artifact
      uses: actions/upload-artifact@v4
      with:
        name: extension-package
        path: extensao-extrator-designer.zip
        retention-days: 30
        
  release-package:
    runs-on: ubuntu-latest
    needs: build-extension
    name: Release Package
    if: github.event_name == 'release'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Download build artifact
      uses: actions/download-artifact@v4
      with:
        name: extension-package
        
    - name: Upload to release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ./extensao-extrator-designer.zip
        asset_name: extensao-extrator-designer-${{ github.event.release.tag_name }}.zip
        asset_content_type: application/zip